Microsoft (R) Macro Assembler (x64) Version 14.00.24210.0   11/12/16 23:35:34
TestAsm.asm						     Page 1 - 1


				; The MIT License (MIT)

				; Copyright (c) 2016, Microsoft

				; Permission is hereby granted, free of charge, to any person obtaining a copy
				; of this software and associated documentation files (the "Software"), to deal
				; in the Software without restriction, including without limitation the rights
				; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
				; copies of the Software, and to permit persons to whom the Software is
				; furnished to do so, subject to the following conditions:

				; The above copyright notice and this permission notice shall be included in
				; all copies or substantial portions of the Software.

				; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
				; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
				; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
				; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
				; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
				; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
				; THE SOFTWARE.

				; Description:
				; 
				; Revision date:

 00000000			.data
 00000000 4D 41 53 4D 20	myMessage BYTE "MASM program example",0dh,0ah,0
	   70 72 6F 67 72
	   61 6D 20 65 78
	   61 6D 70 6C 65
	   0D 0A 00

 00000000			.code
 00000000			main PROC

 00000000  48/ C7 C1		    mov rcx, 16;
	   00000010
 00000007  48/ B8		    mov rax, 1234567812345678h
	   1234567812345678
 00000011  48/ BB		    mov rbx, 2108765432108765h
	   2108765432108765
				    ; expect 2238767832348778

 0000001B			l0:
 0000001B  48/ 3B C3		    cmp rax, rbx
 0000001E  73 07		    jae l1

				    ; rbx is greater - shift its high bits into the low bits of rax
 00000020  48/ 0F A4 D8		    shld rax,rbx, 4
	   04
 00000025  EB 04		    jmp l2

 00000027			l1:

				    ; rax is greater - rotate its high bits into the low bits of rax
 00000027  48/ C1 C0 04		    rol rax, 4
 0000002B			l2:

				    ; both cases, shift the high order bits of rbx out of the way
 0000002B  48/ C1 E3 04		    shl rbx, 4

				    ;; decrement the loop counter and go back to the top if there are more fields
 0000002F  48/ FF C9		    dec rcx
 00000032  75 E7		    jnz l0
 00000034  C3			    ret


 00000035  48/ 0F A4 D8		shld rax, rbx, 4
	   04
				;movd xmm1, rax
				;vprotq xmm0, xmm1, 4

 0000003A  48/ 01 41 05		add [rcx + 5], rax
 0000003E  48/ 03 41 05		add rax, [rcx + 5]
 00000042  66| 48/ 0F 6E C0	movd xmm0, rax
 00000047  F2/ 0F 10 C1		movsd xmm0, xmm1
				; vmovq xmm0, rax       // Illegal instruction
 0000004B  C3			ret

				; stosq
 0000004C  F3/ 48/ AB		rep stosq

				; Dec
 0000004F  FE C8		dec al
 00000051  66| FF C8		dec ax
 00000054  FF C8		dec eax
 00000056  48/ FF C8		dec rax
 00000059  49/ FF CC		dec r12

 0000005C  41/ FE 8C 24		dec byte ptr [r12 + 1234h]
	   00001234
 00000064  66| 41/ FF 8D	dec word ptr [r13 + 1234h]
	   00001234
 0000006C  41/ FF 8E		dec dword ptr [r14 + 1234h]
	   00001234
 00000073  49/ FF 8F		dec qword ptr [r15 + 1234h]
	   00001234

				; Inc
 0000007A  41/ FE C1		inc r9b
 0000007D  66| 41/ FF C2	inc r10w
 00000081  41/ FF C3		inc r11d
 00000084  49/ FF C4		inc r12

 00000087  FE 80 00001234	inc byte ptr [rax + 1234h]
 0000008D  66| FF 85		inc word ptr [rbp + 1234h]
	   00001234
 00000094  FF 86 00001234	inc dword ptr [rsi + 1234h]
 0000009A  48/ FF 87		inc qword ptr [rdi + 1234h]
	   00001234

				; Neg
 000000A1  48/ F7 DB		neg rbx
 000000A4  48/ F7 5D 56		neg qword ptr [rbp + 56h]

				; Not
 000000A8  F6 D3		not bl
 000000AA  66| F7 55 56		not word ptr [rbp + 56h]

				; SIB
 000000AE  48/ 8B 84 CE		mov rax, [rsi + rcx * 8 + 1234h]
	   00001234
 000000B6  4F/ 8B BC EE		mov r15, [r14 + r13 * 8 + 1234h]
	   00001234
 000000BE  42/ 8A 44 E9		mov al, [rcx + r13 * 8 + 12h]
	   12
 000000C3  66| 41/ 8B 5C C7	mov bx, [r15 + rax * 8 + 34h]
	   34

 000000C9  48/ 23 84 CE		and rax, [rsi + rcx * 8 + 1234h]
	   00001234
 000000D1  4F/ 23 BC EE		and r15, [r14 + r13 * 8 + 1234h]
	   00001234
 000000D9  42/ 22 44 E9		and al, [rcx + r13 * 8 + 12h]
	   12
 000000DE  66| 41/ 23 5C C7	and bx, [r15 + rax * 8 + 34h]
	   34

 000000E4  48/ 23 84 17		and rax, [rdi + rdx * 1 + 5678h]
	   00005678
 000000EC  48/ 23 84 57		and rax, [rdi + rdx * 2 + 5678h]
	   00005678
 000000F4  48/ 23 84 97		and rax, [rdi + rdx * 4 + 5678h]
	   00005678
 000000FC  48/ 23 84 D7		and rax, [rdi + rdx * 8 + 5678h]
	   00005678

				; Another special case
 00000104  4D/ 03 6D 00		add r13, [r13]
 00000108  4D/ 8B 6D 00		mov r13, [r13]
 0000010C  48/ 8B 45 00		mov rax, [rbp]
 00000110  48/ 8B 45 12		mov rax, [rbp + 12h]
 00000114  49/ 8B 5D 34		mov rbx, [r13 + 34h]
 00000118  48/ 8B 8D		mov rcx, [rbp + 1234h]
	   00001234

				;
				; Mod/RM special cases for RSP and R12 and [RBP] ==> [RBP + disp8]
				;
 0000011F  49/ 2B 1C 24		sub rbx, [r12]
 00000123  49/ 2B 7C 24		sub rdi, [r12 + 12h]
	   12
 00000128  49/ 2B AC 24		sub rbp, [r12 + 1234h]
	   00001234
 00000130  4D/ 2B 94 24		sub r10, [r12 + 12345678h]
	   12345678

				;
				; Mod/RM case for R8..R15
				;

				;
				; REX W bit. X bit.
				;

				;
				; Group1 addressing mode permutations for a single opcode.
				;

				; direct-direct
 00000138  02 C1		add al, cl
 0000013A  66| 03 DA		add bx, dx
 0000013D  03 F0		add esi, eax
 0000013F  48/ 03 C3		add rax, rbx
 00000142  4D/ 03 C1		add r8, r9
 00000145  49/ 03 E4		add rsp, r12

				; direct-indirect with zero, byte, word, and double word offsets
 00000148  02 08		add cl, byte ptr [rax]
 0000014A  02 59 12		add bl, byte ptr [rcx + 12h]
 0000014D  44/ 02 8E		add r9b, byte ptr [rsi + 100h]
	   00000100
 00000154  44/ 02 BF		add r15b, byte ptr [rdi + 12345678h]
	   12345678

 0000015B  66| 03 12		add dx, word ptr [rdx]
 0000015E  66| 03 49 12		add cx, word ptr [rcx + 12h]
 00000162  66| 44/ 03 8E	add r9w, word ptr [rsi + 1234h]
	   00001234
 0000016A  66| 44/ 03 9F	add r11w, word ptr [rdi + 12345678h]
	   12345678

 00000172  03 12		add edx, dword ptr [rdx]
 00000174  03 49 12		add ecx, dword ptr [rcx + 12h]
 00000177  44/ 03 8E		add r9d, dword ptr [rsi + 1234h]
	   00001234
 0000017E  44/ 03 9F		add r11d, dword ptr [rdi + 12345678h]
	   12345678

 00000185  48/ 03 12		add rdx, qword ptr [rdx]
 00000188  48/ 03 49 12		add rcx, qword ptr [rcx + 12h]
 0000018C  4C/ 03 8E		add r9, qword ptr [rsi + 1234h]
	   00001234
 00000193  4C/ 03 9F		add r11, qword ptr [rdi + 12345678h]
	   12345678


				; indirect-direct with zero, byte, word, and double word offsets
 0000019A  00 08		add byte ptr [rax], cl
 0000019C  00 59 12		add byte ptr [rcx + 12h], bl
 0000019F  44/ 00 8Eadd byte ptr [rsi + 100h], r9b
	   00000100
 000001A6  44/ 00 BF		add byte ptr [rdi + 12345678h], r15b
	   12345678

 000001AD  66| 01 12		add word ptr [rdx], dx
 000001B0  66| 01 49 12		add word ptr [rcx + 12h], cx
 000001B4  66| 44/ 01 8E	add word ptr [rsi + 1234h], r9w
	   00001234
 000001BC  66| 44/ 01 9F	add word ptr [rdi + 12345678h], r11w
	   12345678

 000001C4  01 12		add dword ptr [rdx], edx
 000001C6  01 49 12		add dword ptr [rcx + 12h], ecx
 000001C9  44/ 01 8E		add dword ptr [rsi + 1234h], r9d
	   00001234
 000001D0  44/ 01 9F		add dword ptr [rdi + 12345678h], r11d
	   12345678

 000001D7  48/ 01 12		add qword ptr [rdx], rdx
 000001DA  48/ 01 49 12		add qword ptr [rcx + 12h], rcx
 000001DE  4C/ 01 8E		add qword ptr [rsi + 1234h], r9
	   00001234
 000001E5  4C/ 01 9F		add qword ptr [rdi + 12345678h], r11
	   12345678

				; direct-immediate register 0 case
 000001EC  04 34		add al, 34h
 000001EE  66| 83 C0 56		add ax, 56h
 000001F2  66| 05 5678		add ax, 5678h
 000001F6  83 C0 12		add eax, 12h
 000001F9  05 00001234		add eax, 1234h
 000001FE  05 12345678		add eax, 12345678h
 00000203  48/ 83 C0 12		add rax, 12h
 00000207  48/ 05		add rax, 1234h
	   00001234
 0000020D  48/ 05		add rax, 12345678h
	   12345678

				; direct-immediate general purpose register case
 00000213  80 C3 34		add bl, 34h
 00000216  41/ 80 C5 34		add r13b, 34h
 0000021A  66| 83 C1 56		add cx, 56h
 0000021E  66| 81 C2 5678	add dx, 5678h
 00000223  83 C5 12		add ebp, 12h
 00000226  81 C5 00001234	add ebp, 1234h
 0000022C  81 C5 12345678	add ebp, 12345678h
 00000232  49/ 83 C4 12		add r12, 12h
 00000236  49/ 81 C4		add r12, 1234h
	   00001234
 0000023D  49/ 81 C4		add r12, 12345678h
	   12345678

				; Direct-immediate, different opcodes depending on
				; whether sign extension is acceptable.
				;
				; The immediates that will be sign extended or will use the
				; sign-extend opcode in cases when it makes no difference
				; (when both source and target are 1-byte).
				;
				; The first two lines would correctly fail to compile in NativeJIT
				; and are thus commented out. They would produce the value of
				; FFFFFFFF80000000h unexpectedly since sign extension is unconditionally
				; used for 32-bit immediates targeting 64-bit registers.
				;
				; add rax, 80000000h
				; add rcx, 80000000h
 00000244  48/ 05		add rax, -7fffffffh
	   80000001
 0000024A  48/ 81 C1		add rcx, -7fffffffh
	   80000001
 00000251  80 C1 81		add cl, -7fh
 00000254  80 C1 80		add cl, 80h
 00000257  66| 83 C1 81		add cx, -7fh
 0000025B  83 C1 81		add ecx, -7fh
 0000025E  48/ 83 C1 81		add rcx, -7fh

				; The immediates that will not be sign extended.
 00000262  66| 81 C1 0080	add cx, 80h
 00000267  81 C1 00000080	add ecx, 80h
 0000026D  48/ 81 C1		add rcx, 80h
	   00000080

				;
				; Verify various flavors of each Group1 opcode.
				; These instructions excercise all different flavors
				; which use different base opcode and extension. The
				; generic Group1 encoding was already verified with
				; the add instruction above.
				;
 00000274  24 11		and al, 11h
 00000276  25 11223344		and eax, 11223344h
 0000027B  80 E2 11		and dl, 11h
 0000027E  81 E2 11223344	and edx, 11223344h
 00000284  83 E2 11		and edx, 11h
 00000287  20 53 01		and byte ptr [rbx + 1], dl
 0000028A  21 51 04		and dword ptr [rcx + 4], edx
 0000028D  22 53 01		and dl, byte ptr [rbx + 1]
 00000290  23 51 04		and edx, dword ptr [rcx + 4]

 00000293  3C 11		cmp al, 11h
 00000295  3D 11223344		cmp eax, 11223344h
 0000029A  80 FA 11		cmp dl, 11h
 0000029D  81 FA 11223344	cmp edx, 11223344h
 000002A3  83 FA 11		cmp edx, 11h
 000002A6  38 53 01		cmp byte ptr [rbx + 1], dl
 000002A9  39 51 04		cmp dword ptr [rcx + 4], edx
 000002AC  3A 53 01		cmp dl, byte ptr [rbx + 1]
 000002AF  3B 51 04		cmp edx, dword ptr [rcx + 4]

 000002B2  0C 11		or al, 11h
 000002B4  0D 11223344		or eax, 11223344h
 000002B9  80 CA 11		or dl, 11h
 000002BC  81 CA 11223344	or edx, 11223344h
 000002C2  83 CA 11		or edx, 11h
 000002C5  08 53 01		or byte ptr [rbx + 1], dl
 000002C8  09 51 04		or dword ptr [rcx + 4], edx
 000002CB  0A 53 01		or dl, byte ptr [rbx + 1]
 000002CE  0B 51 04		or edx, dword ptr [rcx + 4]

 000002D1  2C 11		sub al, 11h
 000002D3  2D 11223344		sub eax, 11223344h
 000002D8  80 EA 11		sub dl, 11h
 000002DB  81 EA 11223344	sub edx, 11223344h
 000002E1  83 EA 11		sub edx, 11h
 000002E4  28 53 01		sub byte ptr [rbx + 1], dl
 000002E7  29 51 04		sub dword ptr [rcx + 4], edx
 000002EA  2A 53 01		sub dl, byte ptr [rbx + 1]
 000002ED  2B 51 04		sub edx, dword ptr [rcx + 4]

 000002F0  34 11		xor al, 11h
 000002F2  35 11223344		xor eax, 11223344h
 000002F7  80 F2 11		xor dl, 11h
 000002FA  81 F2 11223344	xor edx, 11223344h
 00000300  83 F2 11		xor edx, 11h
 00000303  30 53 01		xor byte ptr [rbx + 1], dl
 00000306  31 51 04		xor dword ptr [rcx + 4], edx
 00000309  32 53 01		xor dl, byte ptr [rbx + 1]
 0000030C  33 51 04		xor edx, dword ptr [rcx + 4]

				;
				; Lea
				;
 0000030F  48/ 8D 06		lea rax, [rsi]
 00000312  48/ 8D 46 12		lea rax, [rsi + 12h]
 00000316  48/ 8D 46 EE		lea rax, [rsi - 12h]
 0000031A  48/ 8D 86		lea rax, [rsi + 1234h]
	   00001234
 00000321  48/ 8D 86		lea rax, [rsi - 1234h]
	   FFFFEDCC
 00000328  48/ 8D 86		lea rax, [rsi + 12345678h]
	   12345678
 0000032F  48/ 8D 86		lea rax, [rsi - 12345678h]
	   EDCBA988
 00000336  49/ 8D 2C 24		lea rbp, [r12]
 0000033A  49/ 8D AC 24		lea rbp, [r12 + 87h]
	   00000087
 00000342  49/ 8D AC 24		lea rbp, [r12 - 789ABCDEh]
	   87654322
 0000034A  48/ 8D 6C 24		lea rbp, [rsp + 20h]
	   20
 0000034F  48/ 8D 65 E0		lea rsp, [rbp - 20h]

				;
				; Mov
				;
 00000353  8A C1		mov al, cl
 00000355  66| 8B DA		mov bx, dx
 00000358  8B F0		mov esi, eax
 0000035A  48/ 8B C3		mov rax, rbx
 0000035D  4D/ 8B C1		mov r8, r9
 00000360  49/ 8B E4		mov rsp, r12

 00000363  8A 08		mov cl, [rax]
 00000365  8A 59 12		mov bl, [rcx + 12h]
 00000368  44/ 8A 8E		mov r9b, [rsi + 100h]
	   00000100
 0000036F  44/ 8A BF		mov r15b, [rdi + 12345678h]
	   12345678

 00000376  8A 12		mov dl, [rdx]
 00000378  66| 8B 49 12		mov cx, [rcx + 12h]
 0000037C  66| 44/ 8B 8E	mov r9w, [rsi + 1234h]
	   00001234
 00000384  66| 44/ 8B 9F	mov r11w, [rdi + 12345678h]
	   12345678

 0000038C  41/ 8B 21		mov esp, [r9]
 0000038F  8B 51 12		mov edx, [rcx + 12h]
 00000392  8B B6 00001234	mov esi, [rsi + 1234h]
 00000398  44/ 8B 9F		mov r11d, [rdi + 12345678h]
	   12345678

 0000039F  49/ 8B 1C 24		mov rbx, [r12]
 000003A3  48/ 8B 79 12		mov rdi, [rcx + 12h]
 000003A7  48/ 8B AE		mov rbp, [rsi + 1234h]
	   00001234
 000003AE  4C/ 8B 97		mov r10, [rdi + 12345678h]
	   12345678

				; mov r, imm - register 0 case
 000003B5  B0 00		mov al, 0
 000003B7  B0 34		mov al, 34h
 000003B9  66| B8 0056		mov ax, 56h
 000003BD  66| B8 5678		mov ax, 5678h
 000003C1  B8 00000012		mov eax, 12h
 000003C6  B8 00001234		mov eax, 1234h
 000003CB  B8 12345678		mov eax, 12345678h
 000003D0  48/ C7 C0		mov rax, 12h
	   00000012
 000003D7  48/ C7 C0		mov rax, 1234h
	   00001234
 000003DE  48/ C7 C0		mov rax, 12345678h
	   12345678
 000003E5  48/ B8		mov rax, 80000000h
	   0000000080000000
 000003EF  48/ C7 C0		mov rax, -1
	   FFFFFFFF

				; mov r, imm - general purpose register case
 000003F6  B3 00		mov bl, 0
 000003F8  B3 34		mov bl, 34h
 000003FA  41/ B5 34		mov r13b, 34h
 000003FD  66| B9 0056		mov cx, 56h
 00000401  66| BA 5678		mov dx, 5678h
 00000405  BD 00000012		mov ebp, 12h
 0000040A  BD 00001234		mov ebp, 1234h
 0000040F  BD 12345678		mov ebp, 12345678h
 00000414  49/ C7 C4		mov r12, 12h
	   00000012
 0000041B  49/ C7 C4		mov r12, 1234h
	   00001234
 00000422  49/ C7 C4		mov r12, 12345678h
	   12345678
 00000429  49/ BC		mov r12, 80000000h
	   0000000080000000
 00000433  48/ BB		mov rbx, 1234567812345678h
	   1234567812345678
 0000043D  48/ BC		mov rsp, 1234567812345678h
	   1234567812345678
 00000447  49/ BC		mov r12, 1234567812345678h
	   1234567812345678
				; Test for immediate T*
 00000451  48/ B8		mov rax, 2234567812345678h
	   2234567812345678


				; mov [r + offset], r with zero, byte, word, and dword offsets
 0000045B  88 08		mov [rax], cl
 0000045D  88 59 12		mov [rcx + 12h], bl
 00000460  44/ 88 8E		mov [rsi + 100h], r9b
	   00000100
 00000467  44/ 88 BF		mov [rdi + 12345678h], r15b
	   12345678

 0000046E  88 12		mov [rdx], dl
 00000470  66| 89 49 12		mov [rcx + 12h], cx
 00000474  66| 44/ 89 8E	mov [rsi + 1234h], r9w
	   00001234
 0000047C  66| 44/ 89 9F	mov [rdi + 12345678h], r11w
	   12345678

 00000484  41/ 89 21		mov [r9], esp
 00000487  89 51 12		mov [rcx + 12h], edx
 0000048A  89 B6 00001234	mov [rsi + 1234h], esi
 00000490  44/ 89 9F		mov [rdi + 12345678h], r11d
	   12345678

 00000497  49/ 89 1C 24		mov [r12], rbx
 0000049B  48/ 89 79 12		mov [rcx + 12h], rdi
 0000049F  48/ 89 AE		mov [rsi + 1234h], rbp
	   00001234
 000004A6  4C/ 89 97		mov [rdi + 12345678h], r10
	   12345678


				;
				; Push/Pop
				;
 000004AD  58			pop rax
 000004AE  5D			pop rbp
 000004AF  41/ 5C		pop r12
 000004B1  53			push rbx
 000004B2  55			push rbp
 000004B3  41/ 54		push r12

				;
				; Ret
				;
 000004B5  C3			ret

 000004B6			LL1:
 000004B6  74 FE		    jz LL1
 000004B8  0F 84 FFFFFFF8	    jz near ptr LL1
 000004BE  74 F6		    jz LL1
 000004C0  0F 84 FFFFFFF0	    jz near ptr LL1
				;    jz far ptr LL1


				;
				; Imul
				;

 000004C6  66| 0F AF D9		imul bx, cx
 000004CA  0F AF D9		imul ebx, ecx
 000004CD  48/ 0F AF D9		imul rbx, rcx

 000004D1  48/ 0F AF C3		imul rax, rbx;
 000004D5  4D/ 0F AF C1		imul r8, r9;
 000004D9  66| 0F AF C3		imul ax, bx;

 000004DD  66| 0F AF 49		imul cx, [rcx + 12h]
	   12
 000004E2  66| 44/ 0F AF 8E	imul r9w, [rsi + 1234h]
	   00001234
 000004EB  66| 44/ 0F AF 9F	imul r11w, [rdi + 12345678h]
	   12345678

 000004F4  41/ 0F AF 21		imul esp, [r9]
 000004F8  0F AF 51 12		imul edx, [rcx + 12h]
 000004FC  0F AF B6		imul esi, [rsi + 1234h]
	   00001234
 00000503  44/ 0F AF 9F		imul r11d, [rdi + 12345678h]
	   12345678

 0000050B  49/ 0F AF 1C 24	imul rbx, [r12]
 00000510  48/ 0F AF 79		imul rdi, [rcx + 12h]
	   12
 00000515  48/ 0F AF AE		imul rbp, [rsi + 1234h]
	   00001234
 0000051D  4C/ 0F AF 97		imul r10, [rdi + 12345678h]
	   12345678

 00000525  66| 6B C9 56		imul cx, 56h
 00000529  66| 69 C9 0080	imul cx, 80h
 0000052E  66| 69 D2 5678	imul dx, 5678h
 00000533  6B ED 12		imul ebp, 12h
 00000536  69 ED 00001234	imul ebp, 1234h
 0000053C  69 ED 12345678	imul ebp, 12345678h
 00000542  4D/ 6B E4 12		imul r12, 12h
 00000546  4D/ 69 E4		imul r12, 1234h
	   00001234
 0000054D  4D/ 69 E4		imul r12, 12345678h
	   12345678
 00000554  4D/ 6B E4 FF		imul r12, -1

 00000558  FF D0		call rax
 0000055A  FF D4		call rsp
 0000055C  FF D5		call rbp
 0000055E  41/ FF D4		call r12
 00000561  41/ FF D5		call r13

 00000564  48/ B8		mov rax, 07fffffffffffffffh
	   7FFFFFFFFFFFFFFF

 0000056E  66| 48/ 0F 6E C8	movd xmm1, rax
 00000573  66| 48/ 0F 6E C9	movd xmm1, rcx
 00000578  66| 49/ 0F 6E C8	movd xmm1, r8
 0000057D  66| 48/ 0F 6E CD	movd xmm1, rbp
 00000582  66| 49/ 0F 6E CC	movd xmm1, r12

 00000587  66| 48/ 0F 6E C1	movd xmm0, rcx
 0000058C  66| 48/ 0F 6E C9	movd xmm1, rcx
 00000591  66| 48/ 0F 6E D1	movd xmm2, rcx
 00000596  66| 48/ 0F 6E E9	movd xmm5, rcx
 0000059B  66| 4C/ 0F 6E E1	movd xmm12, rcx

 000005A0  66| 0F 6E C8		movd xmm1, eax
 000005A4  66| 0F 6E C9		movd xmm1, ecx
 000005A8  66| 41/ 0F 6E C8	movd xmm1, r8d
 000005AD  66| 0F 6E CD		movd xmm1, ebp
 000005B1  66| 41/ 0F 6E CC	movd xmm1, r12d

 000005B6  66| 0F 6E C1		movd xmm0, ecx
 000005BA  66| 0F 6E C9		movd xmm1, ecx
 000005BE  66| 0F 6E D1		movd xmm2, ecx
 000005C2  66| 0F 6E E9		movd xmm5, ecx
 000005C6  66| 44/ 0F 6E E1	movd xmm12, ecx

				; movss
 000005CB  F3/ 0F 10 CA		movss xmm1, xmm2
 000005CF  F3/ 41/ 0F 10 C4	movss xmm0, xmm12
 000005D4  F3/ 41/ 0F 10 EC	movss xmm5, xmm12
 000005D9  F3/ 0F 10 EB		movss xmm5, xmm3
 000005DD  F3/ 44/ 0F 10 ED	movss xmm13, xmm5
 000005E2  F3/ 41/ 0F 10 C7	movss xmm0, xmm15

 000005E7  F3/ 41/ 0F 10 04	movss xmm0, dword ptr [r12]
	   24
 000005ED  F3/ 0F 10 61		movss xmm4, dword ptr [rcx + 12h]
	   12
 000005F2  F3/ 0F 10 AE		movss xmm5, dword ptr [rsi + 1234h]
	   00001234
 000005FA  F3/ 44/ 0F 10 A7	movss xmm12, dword ptr [rdi + 12345678h]
	   12345678

 00000603  F3/ 41/ 0F 11 04	movss dword ptr [r12], xmm0
	   24
 00000609  F3/ 0F 11 61		movss dword ptr [rcx + 12h], xmm4
	   12
 0000060E  F3/ 0F 11 AE		movss dword ptr [rsi + 1234h], xmm5
	   00001234
 00000616  F3/ 44/ 0F 11 A7	movss dword ptr [rdi + 12345678h], xmm12
	   12345678

				; movsd
 0000061F  F2/ 0F 10 CA		movsd xmm1, xmm2
 00000623  F2/ 41/ 0F 10 C4	movsd xmm0, xmm12
 00000628  F2/ 41/ 0F 10 EC	movsd xmm5, xmm12
 0000062D  F2/ 0F 10 EB		movsd xmm5, xmm3
 00000631  F2/ 44/ 0F 10 ED	movsd xmm13, xmm5
 00000636  F2/ 41/ 0F 10 C7	movsd xmm0, xmm15

 0000063B  F2/ 41/ 0F 10 04	movsd xmm0, qword ptr [r12]
	   24
 00000641  F2/ 0F 10 61		movsd xmm4, qword ptr [rcx + 12h]
	   12
 00000646  F2/ 0F 10 AE		movsd xmm5, qword ptr [rsi + 1234h]
	   00001234
 0000064E  F2/ 44/ 0F 10 A7	movsd xmm12, qword ptr [rdi + 12345678h]
	   12345678

 00000657  F2/ 41/ 0F 11 04	movsd qword ptr [r12], xmm0
	   24
 0000065D  F2/ 0F 11 61		movsd qword ptr [rcx + 12h], xmm4
	   12
 00000662  F2/ 0F 11 AE		movsd qword ptr [rsi + 1234h], xmm5
	   00001234
 0000066A  F2/ 44/ 0F 11 A7	movsd qword ptr [rdi + 12345678h], xmm12
	   12345678

 00000673  F2/ 0F 58 CA		addsd xmm1, xmm2
 00000677  F2/ 41/ 0F 58 C4	addsd xmm0, xmm12
 0000067C  F2/ 41/ 0F 59 EC	mulsd xmm5, xmm12
 00000681  F2/ 0F 59 EB		mulsd xmm5, xmm3
 00000685  F2/ 44/ 0F 5C ED	subsd xmm13, xmm5
 0000068A  F2/ 41/ 0F 5C C7	subsd xmm0, xmm15

 0000068F  F2/ 41/ 0F 58 04	addsd xmm0, qword ptr [r12]
	   24
 00000695  F2/ 0F 58 61		addsd xmm4, qword ptr [rcx + 12h]
	   12
 0000069A  F2/ 0F 59 AE		mulsd xmm5, qword ptr [rsi + 1234h]
	   00001234
 000006A2  F2/ 44/ 0F 5C A7	subsd xmm12, qword ptr [rdi + 12345678h]
	   12345678

 000006AB  F3/ 0F 58 CA		addss xmm1, xmm2
 000006AF  F3/ 41/ 0F 58 C4	addss xmm0, xmm12
 000006B4  F3/ 41/ 0F 59 EC	mulss xmm5, xmm12
 000006B9  F3/ 0F 59 EB		mulss xmm5, xmm3
 000006BD  F3/ 44/ 0F 5C ED	subss xmm13, xmm5
 000006C2  F3/ 41/ 0F 5C C7	subss xmm0, xmm15

 000006C7  F3/ 41/ 0F 58 04	addss xmm0, dword ptr [r12]
	   24
 000006CD  F3/ 0F 58 61		addss xmm4, dword ptr [rcx + 12h]
	   12
 000006D2  F3/ 0F 59 AE		mulss xmm5, dword ptr [rsi + 1234h]
	   00001234
 000006DA  F3/ 44/ 0F 5C A7	subss xmm12, dword ptr [rdi + 12345678h]
	   12345678

				;
				; MovZX
				;

				; 1 byte to 2, 4 and 8.
 000006E3  66| 0F B6 DB		movzx bx, bl
 000006E7  66| 41/ 0F B6 DC	movzx bx, r12b
 000006EC  66| 44/ 0F B6 CA	movzx r9w, dl
 000006F1  66| 0F B6 59		movzx bx, byte ptr [rcx + 12h]
	   12
 000006F6  66| 41/ 0F B6 59	movzx bx, byte ptr [r9 + 34h]
	   34

 000006FC  0F B6 DB		movzx ebx, bl
 000006FF  41/ 0F B6 DC		movzx ebx, r12b
 00000703  44/ 0F B6 CA		movzx r9d, dl
 00000707  0F B6 59 12		movzx ebx, byte ptr [rcx + 12h]
 0000070B  41/ 0F B6 59		movzx ebx, byte ptr [r9 + 34h]
	   34

 00000710  48/ 0F B6 DB		movzx rbx, bl
 00000714  49/ 0F B6 DC		movzx rbx, r12b
 00000718  4C/ 0F B6 CA		movzx r9, dl
 0000071C  48/ 0F B6 59		movzx rbx, byte ptr [rcx + 12h]
	   12
 00000721  49/ 0F B6 59		movzx rbx, byte ptr [r9 + 34h]
	   34

				; 2 bytes to 4 and 8
 00000726  0F B7 DB		movzx ebx, bx
 00000729  41/ 0F B7 DC		movzx ebx, r12w
 0000072D  44/ 0F B7 CA		movzx r9d, dx
 00000731  0F B7 59 12		movzx ebx, word ptr [rcx + 12h]
 00000735  41/ 0F B7 59		movzx ebx, word ptr [r9 + 34h]
	   34

 0000073A  48/ 0F B7 DB		movzx rbx, bx
 0000073E  49/ 0F B7 DC		movzx rbx, r12w
 00000742  4C/ 0F B7 CA		movzx r9, dx
 00000746  48/ 0F B7 59		movzx rbx, word ptr [rcx + 12h]
	   12
 0000074B  49/ 0F B7 59		movzx rbx, word ptr [r9 + 34h]
	   34

				; 4 bytes to 8, implemented in terms of mov
 00000750  8B DB		mov ebx, ebx
 00000752  41/ 8B DC		mov ebx, r12d
 00000755  44/ 8B CA		mov r9d, edx
 00000758  8B 59 12		mov ebx, dword ptr [rcx + 12h]
 0000075B  41/ 8B 59 34		mov ebx, dword ptr [r9 + 34h]

				;
				; MovSX
				;

				; 1 byte to 2, 4 and 8.
 0000075F  66| 0F BE DB		movsx bx, bl
 00000763  66| 41/ 0F BE DC	movsx bx, r12b
 00000768  66| 44/ 0F BE CA	movsx r9w, dl
 0000076D  66| 0F BE 59		movsx bx, byte ptr [rcx + 12h]
	   12
 00000772  66| 41/ 0F BE 59	movsx bx, byte ptr [r9 + 34h]
	   34

 00000778  0F BE DB		movsx ebx, bl
 0000077B  41/ 0F BE DC		movsx ebx, r12b
 0000077F  44/ 0F BE CA		movsx r9d, dl
 00000783  0F BE 59 12		movsx ebx, byte ptr [rcx + 12h]
 00000787  41/ 0F BE 59		movsx ebx, byte ptr [r9 + 34h]
	   34

 0000078C  48/ 0F BE DB		movsx rbx, bl
 00000790  49/ 0F BE DC		movsx rbx, r12b
 00000794  4C/ 0F BE CA		movsx r9, dl
 00000798  48/ 0F BE 59		movsx rbx, byte ptr [rcx + 12h]
	   12
 0000079D  49/ 0F BE 59		movsx rbx, byte ptr [r9 + 34h]
	   34

				; 2 bytes to 4 and 8
 000007A2  0F BF DB		movsx ebx, bx
 000007A5  41/ 0F BF DC		movsx ebx, r12w
 000007A9  44/ 0F BF CA		movsx r9d, dx
 000007AD  0F BF 59 12		movsx ebx, word ptr [rcx + 12h]
 000007B1  41/ 0F BF 59		movsx ebx, word ptr [r9 + 34h]
	   34

 000007B6  48/ 0F BF DB		movsx rbx, bx
 000007BA  49/ 0F BF DC		movsx rbx, r12w
 000007BE  4C/ 0F BF CA		movsx r9, dx
 000007C2  48/ 0F BF 59		movsx rbx, word ptr [rcx + 12h]
	   12
 000007C7  49/ 0F BF 59		movsx rbx, word ptr [r9 + 34h]
	   34

				; 4 bytes to 8
 000007CC  48/ 63 DB		movsxd rbx, ebx
 000007CF  49/ 63 DC		movsxd rbx, r12d
 000007D2  4C/ 63 CA		movsxd r9, edx
 000007D5  48/ 63 59 12		movsxd rbx, dword ptr [rcx + 12h]
 000007D9  49/ 63 59 34		movsxd rbx, dword ptr [r9 + 34h]

				;
				; Aligned 128-bit floating point move: movaps and movapd
				;

 000007DD  0F 28 C9		movaps xmm1, xmm1
 000007E0  41/ 0F 28 D1		movaps xmm2, xmm9
 000007E4  0F 28 51 20		movaps xmm2, dword ptr [rcx + 20h]
 000007E8  41/ 0F 28 91		movaps xmm2, dword ptr [r9 + 200h]
	   00000200
 000007F0  0F 29 51 20		movaps dword ptr [rcx + 20h], xmm2
 000007F4  41/ 0F 29 51		movaps dword ptr [r9 + 20h], xmm2
	   20
 000007F9  45/ 0F 29 99		movaps dword ptr [r9 + 200h], xmm11
	   00000200

 00000801  66| 0F 28 C9		movapd xmm1, xmm1
 00000805  66| 41/ 0F 28 D1	movapd xmm2, xmm9
 0000080A  66| 0F 28 51		movapd xmm2, qword ptr [rcx + 20h]
	   20
 0000080F  66| 41/ 0F 28 91	movapd xmm2, qword ptr [r9 + 200h]
	   00000200
 00000818  66| 0F 29 51		movapd qword ptr [rcx + 20h], xmm2
	   20
 0000081D  66| 41/ 0F 29 51	movapd qword ptr [r9 + 20h], xmm2
	   20
 00000823  66| 45/ 0F 29 99	movapd qword ptr [r9 + 200h], xmm11
	   00000200

				;
				; CvtSI2SD/CvtSI2SS
				;

 0000082C  F3/ 0F 2A C8		cvtsi2ss xmm1, eax
 00000830  F3/ 48/ 0F 2A C8	cvtsi2ss xmm1, rax
 00000835  F3/ 4C/ 0F 2A CB	cvtsi2ss xmm9, rbx
 0000083A  F3/ 49/ 0F 2A C8	cvtsi2ss xmm1, r8
 0000083F  F3/ 0F 2A 49		cvtsi2ss xmm1, dword ptr [rcx + 12h]
	   12
 00000844  F3/ 41/ 0F 2A 49	cvtsi2ss xmm1, dword ptr [r9 + 34h]
	   34
 0000084A  F3/ 48/ 0F 2A 49	cvtsi2ss xmm1, qword ptr [rcx + 56h]
	   56

 00000850  F2/ 0F 2A C8		cvtsi2sd xmm1, eax
 00000854  F2/ 48/ 0F 2A C8	cvtsi2sd xmm1, rax
 00000859  F2/ 4C/ 0F 2A CB	cvtsi2sd xmm9, rbx
 0000085E  F2/ 49/ 0F 2A C8	cvtsi2sd xmm1, r8
 00000863  F2/ 0F 2A 49		cvtsi2sd xmm1, dword ptr [rcx + 12h]
	   12
 00000868  F2/ 41/ 0F 2A 49	cvtsi2sd xmm1, dword ptr [r9 + 34h]
	   34
 0000086E  F2/ 48/ 0F 2A 49	cvtsi2sd xmm1, qword ptr [rcx + 56h]
	   56

				;
				; CvtTSD2SI/CvtTSS2SI
				;

 00000874  F3/ 0F 2C C1		cvttss2si eax, xmm1
 00000878  F3/ 48/ 0F 2C C1	cvttss2si rax, xmm1
 0000087D  F3/ 49/ 0F 2C D9	cvttss2si rbx, xmm9
 00000882  F3/ 4C/ 0F 2C C1	cvttss2si r8, xmm1
 00000887  F3/ 0F 2C 59		cvttss2si ebx, dword ptr [rcx + 12h]
	   12
 0000088C  F3/ 41/ 0F 2C 59	cvttss2si ebx, dword ptr [r9 + 34h]
	   34
 00000892  F3/ 48/ 0F 2C 59	cvttss2si rbx, dword ptr [rcx + 56h]
	   56

 00000898  F2/ 0F 2C C1		cvttsd2si eax, xmm1
 0000089C  F2/ 48/ 0F 2C C1	cvttsd2si rax, xmm1
 000008A1  F2/ 49/ 0F 2C D9	cvttsd2si rbx, xmm9
 000008A6  F2/ 4C/ 0F 2C C1	cvttsd2si r8, xmm1
 000008AB  F2/ 0F 2C 59		cvttsd2si ebx, qword ptr [rcx + 12h]
	   12
 000008B0  F2/ 41/ 0F 2C 59	cvttsd2si ebx, qword ptr [r9 + 34h]
	   34
 000008B6  F2/ 48/ 0F 2C 59	cvttsd2si rbx, qword ptr [rcx + 56h]
	   56

				;
				; Conversion, float - cvtss2sd and cvtsd2ss
				;

 000008BC  F3/ 0F 5A C9		cvtss2sd xmm1, xmm1
 000008C0  F3/ 41/ 0F 5A D1	cvtss2sd xmm2, xmm9
 000008C5  F3/ 0F 5A 51		cvtss2sd xmm2, dword ptr [rcx + 20h]
	   20
 000008CA  F3/ 41/ 0F 5A 91	cvtss2sd xmm2, dword ptr [r9 + 200h]
	   00000200

 000008D3  F2/ 0F 5A C9		cvtsd2ss xmm1, xmm1
 000008D7  F2/ 41/ 0F 5A D1	cvtsd2ss xmm2, xmm9
 000008DC  F2/ 0F 5A 51		cvtsd2ss xmm2, qword ptr [rcx + 20h]
	   20
 000008E1  F2/ 41/ 0F 5A 91	cvtsd2ss xmm2, qword ptr [r9 + 200h]
	   00000200

				;
				; Floating point comparison, comiss and comisd.
				;

 000008EA  0F 2F C9		comiss xmm1, xmm1
 000008ED  41/ 0F 2F D1		comiss xmm2, xmm9
 000008F1  0F 2F 51 20		comiss xmm2, dword ptr [rcx + 20h]
 000008F5  41/ 0F 2F 91		comiss xmm2, dword ptr [r9 + 200h]
	   00000200

 000008FD  66| 0F 2F C9		comisd xmm1, xmm1
 00000901  66| 41/ 0F 2F D1	comisd xmm2, xmm9
 00000906  66| 0F 2F 51		comisd xmm2, qword ptr [rcx + 20h]
	   20
 0000090B  66| 41/ 0F 2F 91	comisd xmm2, qword ptr [r9 + 200h]
	   00000200

				;
				; Shift/rotate
				;

 00000914  D2 C0		rol al, cl
 00000916  D3 E3		shl ebx, cl
 00000918  49/ D3 EC		shr r12, cl

 0000091B  48/ C1 C0 03		rol rax, 3
 0000091F  C0 E3 04		shl bl, 4
 00000922  41/ C1 EC 05		shr r12d, 5

 00000926  66| 0F A4 D8		shld ax, bx, 11
	   0B
 0000092B  0F A4 F2 18		shld edx, esi, 24
 0000092F  49/ 0F A4 EC		shld r12, rbp, 43
	   2B
 00000934  4C/ 0F A4 E5		shld rbp, r12, 43
	   2B

 00000939  66| 0F A5 D8		shld ax, bx, cl
 0000093D  0F A5 F2		shld edx, esi, cl
 00000940  49/ 0F A5 EC		shld r12, rbp, cl
 00000944  4C/ 0F A5 E5		shld rbp, r12, cl

 00000948			main ENDP

				END
